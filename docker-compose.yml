version: '3.4'

services:
    discordbot:
        image: localhost:7000/nfbuidiscordbot
        build:
            context: .
            dockerfile: src/NFB.UI.DiscordBot/Dockerfile
        environment:
            BotToken: ""
        networks:
            - busnetwork
            - databasenetwork
            - loggingnetwork
        depends_on:
            - rabbitmq
            - logging
            - database

    serviceflight:
        image: localhost:7000/nfbserviceflight
        build:
            context: .
            dockerfile: src/NFB.Service.Flight/Dockerfile
        networks:
            - busnetwork
            - databasenetwork
            - loggingnetwork
        depends_on:
            - rabbitmq
            - logging
            - database

    servicevatsim:
        image: localhost:7000/nfbservicevatsim
        build:
            context: .
            dockerfile: src/NFB.Service.Vatsim/Dockerfile
        networks:
            - busnetwork
            - databasenetwork
            - loggingnetwork
        depends_on:
            - rabbitmq
            - logging
            - database

    rabbitmq:
        image: localhost:7000/nfbrabbitmq
        build:
            context: .
            dockerfile: RabbitMqDockerfile
        ports:
            - "5672"
            - "6100:15672"
        volumes:
            - C:\docker\nfb-dev\nfb.rabbitmq:/var/lib/rabbitmq
        networks:
            - busnetwork
        environment:
            - RABBITMQ_DEFAULT_USER=rabbitmquser
            - RABBITMQ_DEFAULT_PASS=k6G4LdPttQL2DvnH
        healthcheck:
            test: rabbitmq-diagnostics -q status
            interval: 30s
            timeout: 30s
            retries: 3

    mongo:
        image: mongo
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: z1Tf3U9io5ufol
        volumes:
            - C:\docker\nfb-dev\nfb.mongo\data:/data/db
        networks:
            - databasenetwork

    mongoadmin:
        image: mongo-express
        ports:
            - "6103:8081"
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: z1Tf3U9io5ufol
            ME_CONFIG_MONGODB_SERVER: mongo
        networks:
            - databasenetwork

    logging:
        image: datalust/seq
        networks:
            - loggingnetwork
        volumes:
            - C:\docker\nfb-dev\nfb.seq\data:/data
        environment:
            - ACCEPT_EULA=Y
        ports:
            - "6101:80"
            - "5341"

    database:
        image: postgres:latest
        volumes:
            - C:\docker\nfb-dev\nfb.database\var\lib\postgresql\data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: dbuser
            POSTGRES_PASSWORD: z1Tf3U9io5ufol
        networks:
            - databasenetwork

    databaseadmin:
        image: adminer
        ports:
            - "6102:8080"
        networks:
            - databasenetwork

networks:
    busnetwork:
    loggingnetwork:
    databasenetwork:
